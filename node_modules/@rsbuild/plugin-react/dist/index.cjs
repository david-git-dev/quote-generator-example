"use strict";
var __webpack_modules__ = {
    "@rspack/plugin-react-refresh": function(module1) {
        module1.exports = require("@rspack/plugin-react-refresh");
    }
};
/************************************************************************/ // The module cache
var __webpack_module_cache__ = {};
// The require function
function __webpack_require__(moduleId) {
    // Check if module is in cache
    var cachedModule = __webpack_module_cache__[moduleId];
    if (void 0 !== cachedModule) return cachedModule.exports;
    // Create a new module (and put it into the cache)
    var module1 = __webpack_module_cache__[moduleId] = {
        exports: {}
    };
    // Execute the module function
    __webpack_modules__[moduleId](module1, module1.exports, __webpack_require__);
    // Return the exports of the module
    return module1.exports;
}
/************************************************************************/ // webpack/runtime/compat_get_default_export
(()=>{
    // getDefaultExport function for compatibility with non-ESM modules
    __webpack_require__.n = function(module1) {
        var getter = module1 && module1.__esModule ? function() {
            return module1['default'];
        } : function() {
            return module1;
        };
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
// webpack/runtime/create_fake_namespace_object
(()=>{
    var getProto = Object.getPrototypeOf ? function(obj) {
        return Object.getPrototypeOf(obj);
    } : function(obj) {
        return obj.__proto__;
    };
    var leafPrototypes;
    // create a fake namespace object
    // mode & 1: value is a module id, require it
    // mode & 2: merge all properties of value into the ns
    // mode & 4: return value when already ns object
    // mode & 16: return value when it's Promise-like
    // mode & 8|1: behave like require
    __webpack_require__.t = function(value, mode) {
        if (1 & mode) value = this(value);
        if (8 & mode) return value;
        if ('object' == typeof value && value) {
            if (4 & mode && value.__esModule) return value;
            if (16 & mode && 'function' == typeof value.then) return value;
        }
        var ns = Object.create(null);
        __webpack_require__.r(ns);
        var def = {};
        leafPrototypes = leafPrototypes || [
            null,
            getProto({}),
            getProto([]),
            getProto(getProto)
        ];
        for(var current = 2 & mode && value; 'object' == typeof current && !~leafPrototypes.indexOf(current); current = getProto(current))Object.getOwnPropertyNames(current).forEach(function(key) {
            def[key] = function() {
                return value[key];
            };
        });
        def['default'] = function() {
            return value;
        };
        __webpack_require__.d(ns, def);
        return ns;
    };
})();
// webpack/runtime/define_property_getters
(()=>{
    __webpack_require__.d = function(exports1, definition) {
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
// webpack/runtime/has_own_property
(()=>{
    __webpack_require__.o = function(obj, prop) {
        return Object.prototype.hasOwnProperty.call(obj, prop);
    };
})();
// webpack/runtime/make_namespace_object
(()=>{
    // define __esModule on exports
    __webpack_require__.r = function(exports1) {
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
/************************************************************************/ var __webpack_exports__ = {};
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);
// EXPORTS
__webpack_require__.d(__webpack_exports__, {
    PLUGIN_REACT_NAME: ()=>/* binding */ PLUGIN_REACT_NAME,
    pluginReact: ()=>/* binding */ pluginReact
});
const external_node_module_namespaceObject = require("node:module");
const external_node_path_namespaceObject = require("node:path");
var external_node_path_default = /*#__PURE__*/ __webpack_require__.n(external_node_path_namespaceObject);
const react_require = (0, external_node_module_namespaceObject.createRequire)(/*#__PURE__*/ function() {
    return 'undefined' == typeof document ? new (module.require('url'.replace('', ''))).URL('file:' + __filename).href : document.currentScript && document.currentScript.src || new URL('main.js', document.baseURI).href;
}());
const applyBasicReactSupport = (api, options)=>{
    const REACT_REFRESH_PATH = options.fastRefresh ? react_require.resolve('react-refresh') : '';
    api.modifyEnvironmentConfig((config, { mergeEnvironmentConfig })=>{
        const isDev = 'development' === config.mode;
        const usingHMR = isDev && config.dev.hmr && 'web' === config.output.target;
        const reactOptions = {
            development: isDev,
            refresh: usingHMR && options.fastRefresh,
            runtime: 'automatic',
            ...options.swcReactOptions
        };
        const extraConfig = {
            tools: {
                swc: {
                    jsc: {
                        parser: {
                            syntax: 'typescript',
                            // enable supports for JSX/TSX compilation
                            tsx: true
                        },
                        transform: {
                            react: reactOptions
                        }
                    }
                }
            }
        };
        return mergeEnvironmentConfig(extraConfig, config);
    });
    api.modifyBundlerChain(async (chain, { CHAIN_ID, environment, isDev, target })=>{
        const { config } = environment;
        const usingHMR = isDev && config.dev.hmr && 'web' === target;
        if (!usingHMR || !options.fastRefresh) return;
        chain.resolve.alias.set('react-refresh', external_node_path_default().dirname(REACT_REFRESH_PATH));
        const { default: ReactRefreshRspackPlugin } = await Promise.resolve().then(__webpack_require__.t.bind(__webpack_require__, "@rspack/plugin-react-refresh", 23));
        const SCRIPT_REGEX = /\.(?:js|jsx|mjs|cjs|ts|tsx|mts|cts)$/;
        const NODE_MODULES_REGEX = /[\\/]node_modules[\\/]/;
        chain.plugin(CHAIN_ID.PLUGIN.REACT_FAST_REFRESH).use(ReactRefreshRspackPlugin, [
            {
                include: [
                    SCRIPT_REGEX
                ],
                exclude: [
                    NODE_MODULES_REGEX
                ],
                ...options.reactRefreshOptions
            }
        ]);
    });
};
const applyReactProfiler = (api)=>{
    api.modifyEnvironmentConfig((config, { mergeEnvironmentConfig })=>{
        if ('production' !== config.mode) return;
        const enableProfilerConfig = {
            output: {
                minify: {
                    jsOptions: {
                        minimizerOptions: {
                            // Need to keep classnames and function names like Components for debugging purposes.
                            mangle: {
                                keep_classnames: true,
                                keep_fnames: true
                            }
                        }
                    }
                }
            }
        };
        return mergeEnvironmentConfig(config, enableProfilerConfig);
    });
    api.modifyBundlerChain((chain, { isProd })=>{
        if (!isProd) return;
        // Replace react-dom with the profiling version.
        // Reference: https://gist.github.com/bvaughn/25e6233aeb1b4f0cdb8d8366e54a3977
        chain.resolve.alias.set('react-dom$', 'react-dom/profiling');
        chain.resolve.alias.set('scheduler/tracing', 'scheduler/tracing-profiling');
    });
};
const isPlainObject = (obj)=>null !== obj && 'object' == typeof obj && '[object Object]' === Object.prototype.toString.call(obj);
const applySplitChunksRule = (api, options = {
    react: true,
    router: true
})=>{
    api.modifyBundlerChain((chain, { environment, isProd })=>{
        const { config } = environment;
        if ('split-by-experience' !== config.performance.chunkSplit.strategy) return;
        const currentConfig = chain.optimization.splitChunks.values();
        if (!isPlainObject(currentConfig)) return;
        const extraGroups = {};
        if (options.react) extraGroups.react = {
            name: 'lib-react',
            test: isProd ? /node_modules[\\/](?:react|react-dom|scheduler)[\\/]/ : /node_modules[\\/](?:react|react-dom|scheduler|react-refresh|@rspack[\\/]plugin-react-refresh)[\\/]/,
            priority: 0
        };
        if (options.router) extraGroups.router = {
            name: 'lib-router',
            test: /node_modules[\\/](?:react-router|react-router-dom|history|@remix-run[\\/]router)[\\/]/,
            priority: 0
        };
        if (!Object.keys(extraGroups).length) return;
        chain.optimization.splitChunks({
            ...currentConfig,
            cacheGroups: {
                ...currentConfig.cacheGroups,
                ...extraGroups
            }
        });
    });
};
const PLUGIN_REACT_NAME = 'rsbuild:react';
const pluginReact = (options = {})=>({
        name: PLUGIN_REACT_NAME,
        setup (api) {
            const defaultOptions = {
                fastRefresh: true,
                enableProfiler: false
            };
            const finalOptions = {
                ...defaultOptions,
                ...options
            };
            if ('rspack' === api.context.bundlerType) {
                applyBasicReactSupport(api, finalOptions);
                if (finalOptions.enableProfiler) applyReactProfiler(api);
            }
            applySplitChunksRule(api, null == finalOptions ? void 0 : finalOptions.splitChunks);
        }
    });
var __webpack_export_target__ = exports;
for(var i in __webpack_exports__)__webpack_export_target__[i] = __webpack_exports__[i];
if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, '__esModule', {
    value: true
});
